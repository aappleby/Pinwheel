################################################################################
# Rules

default_gpp      = g++ -g -MMD -std=gnu++2a -rdynamic
build_mode       = -DCONFIG_RELEASE -O3
default_includes = -Isrc -Isubmodules
libs             = -lSDL2

rule compile_cpp
  command = ${default_gpp} ${build_mode} ${default_includes} ${includes} -MF ${out}.d -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule link
  command = g++ -g ${in} ${libs} -o ${out}

rule lib
  command = ar rcs ${out} ${in}

rule run_test
  command = ${in} | grep "All tests pass." && touch ${out}

################################################################################
# Compile bin/pinwheel

build obj/pinwheel_main.o: compile_cpp src/pinwheel_main.cpp
build obj/pinwheel_demo.o: compile_cpp src/pinwheel_demo.cpp
build obj/pinwheel_test.o: compile_cpp src/pinwheel_test.cpp

build bin/pinwheel: link $
  obj/pinwheel_main.o $
  obj/pinwheel_demo.o $
  obj/glad.o $
  bin/AppLib.a $
  bin/CoreLib.a $
  bin/imgui.a

build bin/pinwheel_test: link $
  obj/pinwheel_test.o

build bin/pinwheel_test_pass: run_test bin/pinwheel_test

################################################################################
# CoreLib

build obj/CoreLib/Assembler.o     : compile_cpp src/CoreLib/Assembler.cpp
build obj/CoreLib/Constants.o     : compile_cpp src/CoreLib/Constants.cpp
build obj/CoreLib/Debug.o         : compile_cpp src/CoreLib/Debug.cpp
build obj/CoreLib/File.o          : compile_cpp src/CoreLib/File.cpp
build obj/CoreLib/MetroBoyCPU.o   : compile_cpp src/CoreLib/MetroBoyCPU.cpp
build obj/CoreLib/StateManager2.o : compile_cpp src/CoreLib/StateManager2.cpp
build obj/CoreLib/Types.o         : compile_cpp src/CoreLib/Types.cpp

build bin/CoreLib.a : lib $
  obj/CoreLib/Assembler.o $
  obj/CoreLib/Constants.o $
  obj/CoreLib/Debug.o $
  obj/CoreLib/File.o $
  obj/CoreLib/MetroBoyCPU.o $
  obj/CoreLib/StateManager2.o $
  obj/CoreLib/Types.o

################################################################################
# AppLib

build obj/AppLib/AppHost.o        : compile_cpp src/AppLib/AppHost.cpp
build obj/AppLib/Audio.o          : compile_cpp src/AppLib/Audio.cpp
build obj/AppLib/Blitter.o        : compile_cpp src/AppLib/Blitter.cpp
build obj/AppLib/BoxPainter.o     : compile_cpp src/AppLib/BoxPainter.cpp
build obj/AppLib/Console.o        : compile_cpp src/AppLib/Console.cpp
build obj/AppLib/DummyApp.o       : compile_cpp src/AppLib/DummyApp.cpp
build obj/AppLib/DumpPainter.o    : compile_cpp src/AppLib/DumpPainter.cpp
build obj/AppLib/GatePix.o        : compile_cpp src/AppLib/GatePix.cpp
build obj/AppLib/GBBlitter.o      : compile_cpp src/AppLib/GBBlitter.cpp
build obj/AppLib/GLBase.o         : compile_cpp src/AppLib/GLBase.cpp
build obj/AppLib/GridPainter.o    : compile_cpp src/AppLib/GridPainter.cpp
build obj/AppLib/LinePainter.o    : compile_cpp src/AppLib/LinePainter.cpp
build obj/AppLib/Terminus.o       : compile_cpp src/AppLib/Terminus.cpp
build obj/AppLib/TextPainter.o    : compile_cpp src/AppLib/TextPainter.cpp
build obj/AppLib/Viewport.o       : compile_cpp src/AppLib/Viewport.cpp

build bin/AppLib.a : lib $
  obj/AppLib/AppHost.o $
  obj/AppLib/Audio.o $
  obj/AppLib/Blitter.o $
  obj/AppLib/BoxPainter.o $
  obj/AppLib/Console.o $
  obj/AppLib/DummyApp.o $
  obj/AppLib/DumpPainter.o $
  obj/AppLib/GatePix.o $
  obj/AppLib/GBBlitter.o $
  obj/AppLib/GLBase.o $
  obj/AppLib/GridPainter.o $
  obj/AppLib/LinePainter.o $
  obj/AppLib/Terminus.o $
  obj/AppLib/TextPainter.o $
  obj/AppLib/Viewport.o $

################################################################################
# Other libs

build obj/glad.o          : compile_cpp submodules/glad/glad.c

build obj/imgui.o         : compile_cpp submodules/imgui/imgui.cpp
build obj/imgui_demo.o    : compile_cpp submodules/imgui/imgui_demo.cpp
build obj/imgui_draw.o    : compile_cpp submodules/imgui/imgui_draw.cpp
build obj/imgui_tables.o  : compile_cpp submodules/imgui/imgui_tables.cpp
build obj/imgui_widgets.o : compile_cpp submodules/imgui/imgui_widgets.cpp

build bin/imgui.a : lib $
  obj/imgui.o $
  obj/imgui_demo.o $
  obj/imgui_draw.o $
  obj/imgui_tables.o $
  obj/imgui_widgets.o $






































# riscv64-unknown-elf-gcc -c hello.cpp -o hello.cpp.o
# riscv64-unknown-elf-gcc -c hello.s -o hello.s.o



# SRCS=$(wildcard *.S)
# OBJS=$(SRCS:.S=.o)
# ELFS=$(SRCS:.S=.elf)
# BINS=$(SRCS:.S=.text.vh) $(SRCS:.S=.data.vh)
#
# all: ${BINS}
#
# %.o: %.S test_macros.h riscv_test.h
# 	riscv64-unknown-elf-gcc -c -mabi=ilp32 -march=rv32i -o $@ $<
#
# %.elf: %.o
# 	riscv64-unknown-elf-ld -Tlink.ld -melf32lriscv $< -o $@
#
# %.text.bin: %.elf
# 	riscv64-unknown-elf-objcopy -O binary $< $@ -j .init -j .text --change-addresses -0x400000
#
# %.data.bin: %.elf
# 	riscv64-unknown-elf-objcopy -O binary $< $@ -j .data -j .eh_frame -j .fini_array -j .init_array --change-addresses -0x80000000
#
# %.vh: %.bin
# 	srec_cat $< -binary -byte-swap 4 -O $@ -VMem 32
#
# clean:
# 	rm -f ${OBJS} ${ELFS} ${BINS}


#rule metron
#  command = bin/metron -q -v -r ${src_dir} -o ${dst_dir} -s ${src_top}
#rule verilator
#  command = verilator ${includes} --cc ${src_top} -Mdir ${dst_dir}
#rule make
#  command = make --quiet -C ${dst_dir} -f ${makefile} > /dev/null
#rule run_test
#  command = ${in} | grep "All tests pass." && touch ${out}
#rule console
#  command = ${in}
#  pool = console
#rule iverilog
#  command = iverilog -g2012 ${defines} ${includes} ${in} -o ${out}
#rule yosys
#  command = yosys -q -p 'read_verilog ${includes} -sv ${in}; dump; $
#      synth_ice40 -json ${out};'
#rule nextpnr-ice40
#  command = nextpnr-ice40 -q --${chip} --package ${package} --json ${in} $
#      --asc ${out} --pcf ${pcf}
#rule icepack
#  command = icepack ${in} ${out}
#rule command
#  command = ${command}
