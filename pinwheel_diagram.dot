digraph G {
    rankdir="LR"
    ranksep=1.2

    rank="same" {
        vane0
        code_l
    }

    rank="same" {
        vane1
        regfile_l
    }

    rank="same" {
        vane2
        reg_alu
        reg_addr
        data
    }

    rank="same" {
        vane3
        regfile_r
        code_r
    }

    rank="same" {
        addr_gen
    }

    rank="same" {
        alu
        mask_gen
        pc_gen
    }

    //----------

    vane0 [shape="record" label="<top>vane0|<hart>hart|<pc>pc|<enable>enable|<active>active|<insn>insn|"]

    vane0:hart   -> vane1:hart
    vane0:pc     -> vane1:pc
    vane0:enable -> vane1:enable
    vane0:active -> vane1:active

    //----------

    vane1 [shape="record" label="<top>vane1|<hart>hart|<pc>pc|<enable>enable|<active>active|<insn>insn|"]

    vane1:hart   -> vane2:hart
    vane1:pc     -> alu:pc
    vane1:pc     -> pc_gen:pc
    vane1:enable -> vane2:enable
    vane1:active -> vane2:active
    vane1:active -> pc_gen:active
    vane1:insn   -> vane2:insn
    vane1:insn   -> addr_gen:insn
    vane1:insn   -> alu:insn
    vane1:insn   -> pc_gen:insn

    //----------

    vane2 [shape="record" label="<top>vane2|<hart>hart|<pc>pc|<enable>enable|<active>active|<insn>insn|"]

    vane2:hart   -> vane3:hart
    vane2:pc     -> vane3:pc
    vane2:pc     -> code_r:addr
    vane2:insn   -> writeback_mux:sel
    vane2:insn   -> regfile_r:wren
    vane2:insn   -> regfile_r:waddr
    vane2:insn   -> unpack:insn
    vane2:enable -> vane3:enable
    vane2:enable -> OR:a
    vane2:active -> OR:b

    OR [shape="Mrecord" label="OR|{{<a>a|<b>b}|{<out>out}}|"]
    OR:out -> vane3:active

    //----------

    vane3 [shape="record" label="<top>vane0|<hart>hart|<pc>pc|<enable>enable|<active>active|<insn>insn|"]

    //----------

    addr_gen [shape="Mrecord" label="<top>addr_gen|{{<insn>insn|<a>a}|<out>out}|"]
    addr_gen:out -> data:addr
    addr_gen:out -> reg_addr:d

    mask_gen [shape="Mrecord" label="<top>mask_gen|{{<insn>insn|<addr>addr}|<out>out}|"]
    vane1:insn -> mask_gen:insn
    addr_gen:out -> mask_gen:addr
    mask_gen:out -> data:wmask

    //----------

    code_l [shape="record" label="<top>code|{{<raddr>raddr|<rden>rden|<waddr>waddr|<wdata>wdata|<wmask>wmask|<wren>wren}|<rdata>rdata}|"]
    code_r [shape="record" label="<top>code|{{<raddr>raddr|<rden>rden|<waddr>waddr|<wdata>wdata|<wmask>wmask|<wren>wren}|<rdata>rdata}|"]
    code_l:rdata -> regfile_l:raddr1
    code_l:rdata -> regfile_l:raddr2
    code_l:rdata -> vane1:insn
    vane0:active -> vane0_reg_rden

    code_l:out -> code_rdata
    data:out -> data_rdata

    code_rdata -> bus_rdata
    regfile_l:raddr1 -> bus_rdata
    data_rdata -> bus_rdata
    debug_reg -> bus_rdata

    vane0:insn -> vane0_op
    vane1:insn -> vane1_op
    vane2:insn -> vane2_op

    vane1:insn     -> vane1_reg_a
    regfile_l:rdata1->vane1_reg_a

    vane1:insn     -> vane1_reg_b
    regfile_l:rdata1->vane1_reg_b

    vane0:hart   -> vane0_reg_raddr1
    code_l:rdata -> vane0_reg_raddr1
    vane0:hart   -> vane0_reg_raddr2
    code_l:rdata -> vane0_reg_raddr2

    vane1:insn -> vane1_mem_addr
    vane1_reg_a -> vane1_mem_addr

    vane1:active -> vane1_mem_rden
    vane1_op     -> vane1_mem_rden
    vane1:active -> vane1_mem_wren
    vane1_op     -> vane1_mem_wren

    vane1_reg_b -> vane1_mem_wdata
    vane1:insn -> vane1_mem_wmask
    vane1_mem_addr -> vane1_mem_wmask

    vane1_mem_addr -> code_cs
    vane1_mem_addr -> data_cs
    vane1_mem_addr -> debug_cs
    vane1_mem_addr -> regfile_cs

    vane1_mem_addr -> data_r:addr
    vane1_mem_rden -> data_r:cs
    data_cs        -> data_r:cs

    vane1_mem_wren  -> debug_reg
    debug_cs        -> debug_reg
    vane1_mem_wdata -> debug_reg

    vane0:hart -> vane0_reg_raddr1
    code_rdata -> vane0_reg_raddr1
    vane0:hart -> vane0_reg_raddr2
    code_rdata -> vane0_reg_raddr2
    vane0:active -> vane0_reg_rden

    vane1_mem_addr -> vane1_reg_raddr
    vane1_mem_rden -> vane1_reg_rden
    regfile_cs     -> vane1_reg_rden

    vane0_reg_raddr1 -> regfile_l:raddr1
    vane0_reg_raddr2 -> regfile_l:raddr2
    vane0_reg_rden   -> regfile_l:rden

    vane2:hart -> vane2_reg_waddr
    vane2:insn -> vane2_reg_waddr
    vane2:enable -> vane2_reg_wren
    vane2:active -> vane2_reg_wren
    vane2_reg_waddr -> vane2_reg_wren
    vane2_op -> vane2_reg_wren

    vane2_op      -> vane2_reg_wdata
    bus_rdata     -> vane2_reg_wdata
    vane2_alu_out -> vane2_reg_wdata

    vane1_mem_waddr -> vane1_reg_waddr
    vane1_mem_wren -> vane1_reg_wren
    regfile_cs -> vane1_reg_wren
    vane1_reg_b -> vane1_reg_wdata

    vane2_reg_waddr -> regfile_r:waddr
    vane2_reg_wdata -> regfile_r:wdata
    vane2_reg_wren  -> regfile_r:wren

    vane1_reg_waddr -> regfile_r:waddr
    vane1_reg_wdata -> regfile_r:wdata
    vane1_reg_wren  -> regfile_r:wren

    vane2:enable -> code_r:rden
    vane2:active -> code_r:rden
    vane2:pc     -> code_r:raddr

    vane1_mem_addr -> code_r:raddr
    vane1_mem_rden -> code_r:rden
    code_cs        -> code_r:rden

    vane1_mem_addr  -> code_r:waddr
    vane1_mem_wdata -> code_r:wdata
    vane1_mem_wren  -> code_r:wren
    code_cs         -> code_r:wren

    vane2:enable -> vane0:active
    vane2:active -> vane0:active

    vane0:active -> vane1:insn
    code_rdata -> vane1:insn




    //----------

    data [shape="record" label="<top>data|{{<raddr>raddr|<rden>rden|<waddr>waddr|<wdata>wdata|<wmask>wmask|<wren>wren}|<rdata>rdata}|"]
    data:rdata -> unpack:data

    //----------

    regfile_l [shape="record" label="<top>regfile|{{<raddr1>raddr1|<raddr2>raddr2|<waddr>waddr|<wren>wren|<wdata>wdata}|{<rdata1>rdata1|<rdata2>rdata2}}|"]
    regfile_r [shape="record" label="<top>regfile|{{<raddr1>raddr1|<raddr2>raddr2|<waddr>waddr|<wren>wren|<wdata>wdata}|{<rdata1>rdata1|<rdata2>rdata2}}|"];
    regfile_l:rdata1 -> addr_gen:a
    regfile_l:rdata2 -> data:wdata
    regfile_l:rdata1 -> alu:a
    regfile_l:rdata2 -> alu:b
    regfile_l:rdata1 -> pc_gen:a
    regfile_l:rdata2 -> pc_gen:b

    //----------

    //----------

    reg_addr [shape="record" label="<top>reg_addr|{<d>d|<q>q}|"]
    reg_addr:q -> unpack:addr

    //----------

    unpack  [shape="Mrecord" label="unpack|{{<insn>insn|<addr>addr|<data>data} | <out>out } |"]
    unpack:out        -> writeback_mux:a

    //----------

    alu [shape="Mrecord" label="alu|{{<insn>insn|<pc>pc|<a>a|<b>b}|<out>out}|"]
    alu:out -> reg_alu:d

    //----------

    pc_gen [shape="Mrecord" label="<top>pc_gen|{ {<pc>pc|<active>active|<insn>insn|<a>a|<b>b} | <out>out }|"]
    pc_gen:out -> vane2:pc

    //----------

    reg_alu [shape="record" label="<top>reg_alu|{<d>d|<q>q}|"]
    reg_alu:q         -> writeback_mux:b

    //----------

    writeback_mux [shape="Mrecord" label="mux|{{<sel>sel|<a>a|<b>b} | <out>out }|"]
    writeback_mux:out -> regfile_r:wdata
}
